@page "/signup"
@rendermode InteractiveServer
@using ReleaseNotesProject.Components.Layout
@layout LoginLayout
@inject NavigationManager NavigationManager

<PageTitle>Sign Up</PageTitle>


<div>

    <!-- login form -->
    <EditForm Model=@User FormName="signupForm" OnSubmit="HandleSignUp">
        <div><br></div>



        <div style="width:50%; float:left; margin-right: 10px;" class="card-body">

            <div><h5>Sign Up</h5></div>
            <!-- user input -->
            <div class="form-group">
                <label for="email">
                    Email address
                </label>
                <InputText id="email" class="form-control" @bind-Value="currentEmail" />
            </div>
            <!-- password input -->
            <div class="form-group">
                <label for="password">Password</label>
                <InputText type="password" id="pass" class="form-control" @bind-Value="currentPass" />
            </div>

            <div class="form-group">
                <label for="name">
                    Full Name
                </label>
                <InputText id="name" class="form-control" @bind-Value="currentName" />
            </div>

            <div class="form-group">
                <label for="admincode">
                    Admin Code
                </label>
                <InputText id="admincode" class="form-control" @bind-Value="currentName" />
            </div>

            <div><br></div>

            <div>
                <button type="submit" class="btn btn-primary" value="save">
                    <span>Sign Up</span>
                </button>

                <button type="reset" class="btn btn-primary" value="clear">
                    <span>Clear</span>
                </button>

            </div>

            <div><br></div>



            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-3">
                    @errorMessage
                </div>
            }

        </div>
    </EditForm>









</div>


@code {

    private string errorMessage = string.Empty;
    Users User = new Users();
    private string currentPass = string.Empty;
    private string currentEmail = string.Empty;
    private string currentName = string.Empty;
    public 
    private bool isValidUser = false;
    private bool isValidPass = false;
    private bool isValidName = false;

    private async Task HandleSignUp()
    {


        foreach (Users user in Users.AllUsers)
        {

            //set current user of app
            if (currentPass == user.password && currentEmail == user.email)
            {
                isValidPass = true;
                isValidUser = true;
                isValidName = true;
                

            }
        }

        if (!string.IsNullOrEmpty(currentPass) && !string.IsNullOrEmpty(currentEmail) && !string.IsNullOrEmpty(currentName))
        {
            isValidPass = true;
            isValidUser = true;
            isValidName = true;

        }
        


        if (isValidPass && isValidUser && isValidName)
        {


            // Navigate to home page after successful login
           
            NavigationManager.NavigateTo("/viewrecords");
        }
        else
        {
            //set login error
            errorMessage = $"Invalid email or password";
            //from previous iteration, attempted to validate password and username independently for better error msging
            //left for future testing
            isValidPass = false;
            isValidUser = false;
        }



    }



}
